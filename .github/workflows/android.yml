name: package release

# 提交带Tag时，构建正式包
on:
  push:
    tags:
      - "*"

jobs:
  package:
    name: Generate Release APK
    runs-on: ubuntu-latest
    steps:
      # 1.拉取代码
      - name: checkout source code
        uses: actions/checkout@v2

      # 2.配置JDK
      - name: set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      # 3.获取签名密钥
      - name: decrypt key
        run: |
          gpg --quiet --batch --yes --decrypt \
          --passphrase=${{ secrets.KEY_PASSPHRASE }} \
          --output gradle/assemble/dandanplay.jks gradle/assemble/dandanplay.jks.gpg

      # 4.配置构建类型
      - name: setup build type
        run: echo "BUILD_TYPE=release" >> $GITHUB_ENV

      # 5.构建安装包
      - name: assemble apk
        env:
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
          ALIAS_PASS: ${{ secrets.ALIAS_PASS }}
        run: chmod +x gradlew &&./gradlew clean assemble${{ env.BUILD_TYPE }} --stacktrace

      # 6.配置构建版本
      - name: setup build version
        run: |
          apk_version=`egrep -o "[0-9].[0-9].[0-9]" buildSrc/src/main/java/Versions.kt`
          echo "BUILD_VERSION=$apk_version" >> $GITHUB_ENV

      # 7.移动文件到根目录
      - name: move file
        run: |
          abis=(arm64-v8a armeabi-v7a universal)
          for abi in ${abis[@]}
          do
            file_name="dandanplay_v${{ env.BUILD_VERSION }}_${abi}-${{ env.BUILD_TYPE }}.apk"
            mv app/build/outputs/apk/${{ env.BUILD_TYPE }}/${file_name} $file_name
          done

      # 8.配置构建tag
      - name: Get tag name
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "BUILD_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      # 9.创建Release
      - name: generate release
        id: generate_release
        uses: softprops/action-gh-release@v1
        with:
          name: 弹弹play概念版 v${{ env.BUILD_VERSION }}
          tag_name: ${{ env.VERSION_TAG }}
          body_path: change/dandanplay-v${{ env.BUILD_VERSION }}.txt
          prerelease: false
          files: |
            dandanplay_v${{ env.BUILD_VERSION }}_arm64-v8a-${{ env.BUILD_TYPE }}.apk
            dandanplay_v${{ env.BUILD_VERSION }}_armeabi-v7a-${{ env.BUILD_TYPE }}.apk
            dandanplay_v${{ env.BUILD_VERSION }}_universal-${{ env.BUILD_TYPE }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 10.提取下载链接
      - name: extract download links
        if: steps.generate_release.outputs.assets
        run: |
          echo "${{ steps.generate_release.outputs.assets }}" > download_link.txt
          echo `grep -P -o "(?<=browser_download_url:)\w\S+?(?=})" download_link.txt` > download_link.txt
          echo 'DOWNLOAD_LINKS<<EOF' >> $GITHUB_ENV
          cat download_link.txt | sed 's/ /\\n/g' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      # 11.推送打包消息到钉钉
      - name: push package message
        if: steps.generate_release.outputs.assets
        uses: ghostoy/dingtalk-action@master
        with:
          webhook: ${{ secrets.DINGTALK_WEBHOOK}}
          secret: ${{ secrets.DINGTALK_SECRET }}
          msgtype: text
          content: |
            {
              "content": "打包版本：v${{ env.BUILD_VERSION }}\n下载链接：\n${{ env.DOWNLOAD_LINKS }}\n"
            }
          at: |
            {
              "isAtAll": true
            }
